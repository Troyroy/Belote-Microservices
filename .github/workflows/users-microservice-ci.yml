name: Users Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'microservices/users-microservice/**'
      - 'shared/**'
      - '.github/workflows/users-service-ci.yml'
      - 'build.gradle'
      - 'settings.gradle'
      - 'docker-compose.yml'

env:
  SERVICE_NAME: users-microservice
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/belote-users-microservice
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_ORGANIZATION }}_belote-users-microservice

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build, Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          chmod +x gradlew
          ./gradlew :shared:common-events:build \
                    :shared:common-models:build \
                    --warning-mode all
          ./gradlew :microservices:users-microservice:build \
                    :microservices:users-microservice:jacocoTestReport \
                    :microservices:users-microservice:sonarqube \
                    -Dsonar.projectKey=${{ secrets.SONAR_ORGANIZATION }}_belote-users-microservice \
                    -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
                    -Dsonar.host.url=https://sonarcloud.io \
                    --warning-mode all

  build-and-push:
    needs: test-and-analyze
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: troyroy/belote_users_microservice:latest